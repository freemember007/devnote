======缓存======
sinatra缓存控制(这是浏览器缓存方法):
http://www.sinatrarb.com/intro-zh.html#%E7%BC%93%E5%AD%98%E6%8E%A7%E5%88%B6
另一种缓存方式是用sinatra-cache（它通过生成静态文件来达成缓存）:
http://www.iteye.com/topic/592944
Sinatra再入门、Padrino/Rack/未来还有什么(讲了很多高深的东西):
http://www.rubycc.com/bbs/topic_detail/86
Rails的缓存机制以及memcached的使用:
http://rails-everyday.group.iteye.com/group/wiki/1160

========bundle========
1.一定要用gemfile来管理应用，以保证版本的稳定性，
bundle init
定义gem和版本
bundle install
bundle package
2.服务启动时，确保环境为gemfile定义的环境，用以下命令：
bundle exec ruby app.rb

=========启动服务及后台任务=============
gem install Puma (貌似这个服务器性能不错。)
nohup bundle exec ruby app.rb -p 80 -e production &
cron命令备份：
rvm下crontab因为环境问题要做专门配置，见：https://rvm.io/integration/cron/
最终正确的写法为：
*/30 * * * * source /etc/profile && source ~/.bashrc && source ~/.bash_profile && source /usr/local/rvm/environments/ruby-1.9.3-p392 && cd xmzdm && bundle exec ruby grab.rb >/root/xmzdm/cronlog 2>&1

======sqlite连接池======
ActiveRecord::ConnectionTimeoutErrorat /
could not obtain a database connection within 5 seconds. The max pool size is currently 5; consider increasing it.
搜索此文件并编辑它(目前已设为60，如果用到多个activerecord，多个都要改)：
find / -name connection_pool.rb  -print
vim /usr/local/ruby/lib/ruby/gems/1.8/gems/activerecord-2.2.2/lib/active_record/connection_adapters/abstract/connection_pool.rb
ssh下重启服务器：shutdown -r或reboot (shutdown与halt分别是安全关机是硬关机)
sqlite关闭数据库，清除连接池：
http://blog.csdn.net/liangzhonglin/article/details/4935065
新办法：
把数据库连接放在controller里，直接在建立连接时设定pool大小和timeout时间

======定时服务======
在sinatra中使用定时服务:
http://www.wangdg.com/?p=361
主题 : command line tool工程，如何调用火狐浏览器打开baidu？
http://www.cocoachina.com/bbs/read.php?tid=71270

======SSH不输入密码连接远程Linux主机======
1) 在本地主机生成密钥对（注：如已存在，可不创建）
ssh-keygen -t rsa
这个命令生成一个密钥对：id_rsa（私钥文件）和id_rsa.pub（公钥文件）。默认被保存在~/.ssh/目录下。
2) 将公钥添加到远程主机的 authorized_keys 文件中
将文件上传到远程主机中
scp ~/.ssh/id_rsa.pub root@184.82.79.30:/root/
SSH到登陆到远程主机，将公钥追加到 authorized_keys 文件中
cat /root/id_rsa.pub >> /root/.ssh/authorized_keys
3) 重启 open-ssh 服务
/etc/init.d/sshd restart
参考：http://blog.yening.cn/2006/10/30/187.htm

======解析json======
Ruby/Rails中解析Json数据
http://kongqingyun123.blog.163.com/blog/static/63772835201191854755460/

======activerecord 时间比较======
:conditions => ["time > ?", Time.now - 1.days]
参考：http://ihower.tw/blog/archives/1766

======提升正则表达式======
让ruby1.8支持前置条件或后置条件替换的库Oniguruma for Ruby：
http://oniguruma.rubyforge.org/
onigurma和ruby的安装：
http://chaotian.iteye.com/blog/177400